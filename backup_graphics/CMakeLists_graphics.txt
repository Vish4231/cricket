cmake_minimum_required(VERSION 3.16)
project(CricketManager VERSION 1.0.0 LANGUAGES C CXX)

# Set C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Set build type
if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release)
endif()

# Compiler flags
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -O2")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -g -O0")

# Find required packages (console-only)
find_package(PkgConfig REQUIRED)
find_package(CURL REQUIRED)

# Find nlohmann/json (header-only library)
find_package(nlohmann_json 3.2.0 REQUIRED)

# Include directories
include_directories(${CMAKE_SOURCE_DIR}/src)
include_directories(${CMAKE_SOURCE_DIR}/include)
include_directories(/opt/homebrew/include)

# Source files (console-only)
set(SOURCES
    src/main.cpp
    src/Player.cpp
    src/Team.cpp
    src/MatchEngine.cpp
    src/AuctionManager.cpp
    src/CommentaryManager.cpp
    src/Venue.cpp
    src/DataManager.cpp
)

# Create executable
add_executable(CricketManager ${SOURCES})

# Link libraries (console-only)
target_link_libraries(CricketManager
    CURL::libcurl
    nlohmann_json::nlohmann_json
)

# Copy assets to build directory
file(COPY assets DESTINATION ${CMAKE_BINARY_DIR})

# Platform-specific settings
if(APPLE)
    # No special requirements for console app on macOS
elseif(UNIX)
    target_compile_options(CricketManager PRIVATE -Wall -Wextra)
elseif(WIN32)
    target_compile_options(CricketManager PRIVATE /W4)
endif()

# Installation
install(TARGETS CricketManager
    RUNTIME DESTINATION bin
)

# Print configuration info
message(STATUS "Cricket Manager Console Configuration:")
message(STATUS "  C++ Standard: ${CMAKE_CXX_STANDARD}")
message(STATUS "  Graphics: DISABLED")
message(STATUS "  Audio: DISABLED")
message(STATUS "  CURL: Found")
message(STATUS "  nlohmann/json: Found")
message(STATUS "  Build Type: ${CMAKE_BUILD_TYPE}")
message(STATUS "  Mode: Console Only") 